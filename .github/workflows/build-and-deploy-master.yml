name: Build, push, and deploy

on:
  push:
    branches:
      - master
env:
  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  ORACLE_IMAGE: docker.pkg.github.com/navikt/fpsak-autotest/oracle-flattened
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/fpabonnent
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - run:  git fetch --prune --unshallow

      - name: Cache maven repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Hent tag
        run: echo "::set-env name=TAG::$(date "+%Y.%m.%d")-$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Hent og start Oracle image
        env:
          GITHUB_TOKEN: ${{ secrets.NOTIFICATION }}
        id: oracle
        shell: bash
        run: |
          echo  $GITHUB_TOKEN | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          echo "Henter og starter Oracle image $ORACLE_IMAGE"
          docker-compose -f oracle/docker-compose.yml pull
          rm -f nohup.out
          docker-compose -f oracle/docker-compose.yml up oracle >nohup.out 2>&1 &
          sh -c 'tail -n +0 -f nohup.out | { sed "/Disconnected/q" && kill $$; }' || true

      - name: Kompiler
        run: |
          echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"
          mvn test -e --batch-mode --settings .github/workflows/.m2/settings.xml
          ls -l migreringer/target/classes/db/migration/defaultDS/V4_0__baseline.sql
          cp migreringer/src/main/resources/db/V4_0__baseline.sql.orig  migreringer/target/classes/db/migration/defaultDS/V4_0__baseline.sql
          mvn install -Dmaven.test.skip=false  -e --batch-mode --settings .github/workflows/.m2/settings.xml
          ls -l migreringer/target/classes/db/migration/defaultDS/V4_0__baseline.sql

        env:
          TZ: Europe/Oslo
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.NOTIFICATION }}
          SONAR: ${{ secrets.SONAR }}

      - name: Bygg, tag og push Docker image
        run: |
          docker build --pull --tag ${IMAGE_BASE}:${TAG} --tag ${IMAGE_BASE}:latest .
          echo  $GITHUB_TOKEN | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
          docker push ${IMAGE_BASE}:latest
          docker push ${IMAGE_BASE}:${TAG}

      - name: Lukk gamle bygg-issues
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['bygg']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });

      - name: Opprett deployment issue
        if: success()
        uses: maxkomarychev/oction-create-issue@v0.7.1
        id: createdeployissue
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Deploy av ${{ env.TAG }}
          labels: deployment
          body: |
            Kommenter med <b>/promote cluster namespace</b>, hvor <b>cluster</b> er et gyldig clusternavn og <b>namespace</b> et eksisterende namespace i det clusteret.

            <table>
            <tr><th>Cluster</th><th>Namespace</th></tr>
            <tr><td>dev-fss</td><td>q1</td></tr>
            <tr><td>prod-fss</td><td>default</td></tr>
            </table>

      - name: Trigger verdikjedetestene i fpsak-autotest prosjektet
        if: success()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.NOTIFICATION }}
          repository: navikt/fpsak-autotest
          event-type: fpabonnent-verdikjede
          client-payload: '{ "trigger": "${{ github.repository }}", "version": "${{ env.TAG }}", "issue-number": "${{ steps.createdeployissue.outputs.number }}" }'
